# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: CopyFiles@1
  inputs:
    contents: '**'
    targetFolder: $(System.DefaultWorkingDirectory)

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script 1'

- script: |
    echo OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
    python -m pip install setuptools wheel
    echo OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
    pip install ansible[azure]
    echo OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
  displayName: 'Install tool'

- script: |
    python -V
    pip -V
    ansible --version
    ls -l
    ls -l $(System.DefaultWorkingDirectory)
  displayName: 'Version check'

- script: |
    echo $(MyServicePrincipal.AZURE_SUBSCRIPTION_ID)
    export AZURE_SUBSCRIPTION_ID=$(MyServicePrincipal.AZURE_SUBSCRIPTION_ID)
    export AZURE_CLIENT_ID=$(MyServicePrincipal.AZURE_CLIENT_ID)
    export AZURE_SECRET=$(MyServicePrincipal.AZURE_SECRET)
    export AZURE_TENANT=$(MyServicePrincipal.AZURE_TENANT)
    echo $(AZURE_SUBSCRIPTION_ID)
  displayName: 'Service Principal login'

- task: ms-vscs-rm.vss-services-ansible.ansible-task.Ansible@0
  displayName: 'Run playbook to create VM'
  inputs:
    playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/create_azure_vm.yml'

- task: ms-vscs-rm.vss-services-ansible.ansible-task.Ansible@0
  displayName: 'Run playbook to run webapp'
  inputs:
    playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/run_webapp.yml'
    inventoriesAgentMachine: file
    inventoryFileOnAgentMachine: '$(System.DefaultWorkingDirectory)/inv'
    args: ' -e "vm_name=myVM dump_file=mysql_dump"'
